package main

import (
	"encoding/json"
	"io/ioutil"
	"os"
	"testJson/StructJson"
)

type Awesome struct {
	Id        string  `json:"id"`
	Message   string  `json:"message"`
	Score     float64 `json:"score"`
	Confirmed bool    `json:"confirmed"`
}

func NewAwesome(id string, message string, score float64, confirmed bool) *Awesome {
	return &Awesome{
		id,
		message,
		score,
		confirmed,
	}
}

func NewAwesomeFromJSON(jsonData []byte) *Awesome {
	var awesome *Awesome
	err := json.Unmarshal(jsonData, &awesome)
	if err != nil {
		return nil
	}
	return awesome
}

func(a *Awesome) ToJSON(pretty bool) ([]byte, error) {
	if pretty {
		return json.MarshalIndent(a, "", "  ")
	} else {
		return json.Marshal(a)
	}
}

func main() {
	//awesome := NewAwesome("123456789", "Total awesomeness", 9.99, true)
	//awesomeJSON, _ := awesome.ToJSON(false)
	//fmt.Printf("%s\n", awesomeJSON)
	//moreAwesomeJSON, _ := awesome.ToJSON(true)
	//fmt.Printf("%s\n", moreAwesomeJSON)


}

func EncodeJson()  {
	jsonFile, _ := os.Open("bid-request.json")
	byteValue, _ := ioutil.ReadAll(jsonFile)

	var jsons StructJson.AutoGenerated

	json.Unmarshal(byteValue, &jsons)

}

